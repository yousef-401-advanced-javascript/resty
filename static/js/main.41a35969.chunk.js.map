{"version":3,"sources":["components/header/index.js","components/footer/index.js","components/results/index.js","components/form/form.js","components/history/index.js","App.js","index.js"],"names":["Header","to","React","Component","Footer","Results","locals","props","className","JSON","stringify","Headers","headers","Response","results","History","theQueries","getting","localStorage","getItem","parse","map","val","key","id","method","url","arr","Form","getHandler","e","a","fetch","fetching","json","data","resultsHandler","inLocal","uuidv4","unshift","setState","theBigObj","hi","state","setItem","alert","console","log","postHandler","option","body","putHandler","deleteHandler","handleSubmit","preventDefault","target","reset","bodyChange","value","Fragment","onSubmit","this","name","type","onChange","handleChangeUrl","onClick","handleChangeMethod","App","handlingTheResults","Accept","counts","exact","path","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"6QAwBeA,E,uKAnBP,OACI,gCACI,qCACI,6BACI,4BACI,4BACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAEJ,4BACI,kBAAC,IAAD,CAASA,GAAG,YAAZ,mB,GAXXC,IAAMC,WCKZC,E,uKAHP,OAAO,gE,GAFMF,IAAMC,WCeZE,ICbXC,EDaWD,EAff,SAAiBE,GAEb,OACI,oCACI,uCACA,yBAAKC,UAAU,cAEf,6BAAMC,KAAKC,UAAU,CAACC,QAAQJ,EAAMK,QAASC,SAASN,EAAMO,SAAU,KAAM,UERzEC,UAAU,SAACR,GACtB,IAAIS,EAAa,GACbC,EAAUC,aAAaC,QAAQ,WAMnC,OALIF,IAEAD,EAAaP,KAAKW,MAAMH,IAIxB,oCACI,6BAAST,UAAU,WACf,4BACIQ,EAAWK,KAAI,SAAAC,GACX,OAAQ,wBAAIC,IAAKD,EAAIE,IACjB,0BAAMhB,UAAU,UAAUc,EAAIG,QAC9B,0BAAMjB,UAAU,OAAOc,EAAII,a,wCDXnDT,EAAUC,aAAaC,QAAQ,WAC/BF,IAEAX,EAASG,KAAKW,MAAMH,IAKxB,IAAIU,EAAMrB,GAAkB,GA2LbsB,E,kDAvLX,WAAYrB,GAAQ,IAAD,8BACf,cAAMA,IAQVsB,WATmB,uCASN,WAAOC,GAAP,qBAAAC,EAAA,mEAED,EAAKxB,MAAMmB,MAAO,EAAKnB,MAAMkB,OAF5B,iCAGsBO,MAAM,EAAKzB,MAAMmB,KAHvC,cAGKO,EAHL,gBAIkBA,EAASC,OAJ3B,OAIKC,EAJL,OAMD,EAAK5B,MAAM6B,eAAeD,GACtBE,EAAU,CACVZ,OAAQ,EAAKlB,MAAMkB,OACnBC,IAAK,EAAKnB,MAAMmB,IAChBZ,QAASqB,EACTX,GAAIc,eAGRX,EAAIY,QAAQF,GACZ,EAAKG,SAAS,CAAEC,UAAWd,IACvBe,EAAKjC,KAAKC,UAAU,EAAKiC,MAAMF,WACnCvB,aAAa0B,QAAQ,UAAWF,GAjB/B,wBAoBDG,MAAM,gBApBL,0DAuBKC,QAAQC,IAAR,MAvBL,0DATM,wDAmCnBC,YAnCmB,sBAmCL,oCAAAjB,EAAA,mEAEF,EAAKxB,MAAMmB,MAAO,EAAKnB,MAAMkB,OAF3B,wBAGEwB,EAAS,CACTxB,OAAQ,OACRb,QAAS,CACL,eAAgB,oBAEpBsC,KAAM,EAAKP,MAAMO,MARnB,SAUqBlB,MAAM,EAAKzB,MAAMmB,IAAKuB,GAV3C,cAUIhB,EAVJ,gBAWiBA,EAASC,OAX1B,OAWIC,EAXJ,OAaF,EAAK5B,MAAM6B,eAAeD,GAEtBE,EAAU,CACVZ,OAAQ,EAAKlB,MAAMkB,OACnBC,IAAK,EAAKnB,MAAMmB,IAChBZ,QAASqB,EACTX,GAAIc,eAGRX,EAAIY,QAAQF,GACZ,EAAKG,SAAS,CAAEC,UAAWd,IACvBe,EAAKjC,KAAKC,UAAU,EAAKiC,MAAMF,WACnCvB,aAAa0B,QAAQ,UAAWF,GAzB9B,wBA4BFG,MAAM,gBA5BJ,0DA+BIC,QAAQC,IAAR,MA/BJ,0DAnCK,EAuEnBI,WAvEmB,sBAuEN,oCAAApB,EAAA,mEAED,EAAKxB,MAAMmB,MAAO,EAAKnB,MAAMkB,OAF5B,wBAGGwB,EAAS,CACTxB,OAAQ,MACRb,QAAS,CACL,eAAgB,oBAEpBsC,KAAM,EAAKP,MAAMO,MARpB,SAUsBlB,MAAM,EAAKzB,MAAMmB,IAAKuB,GAV5C,cAUKhB,EAVL,gBAWkBA,EAASC,OAX3B,OAWKC,EAXL,OAaD,EAAK5B,MAAM6B,eAAeD,GAEtBE,EAAU,CACVZ,OAAQ,EAAKlB,MAAMkB,OACnBC,IAAK,EAAKnB,MAAMmB,IAChBZ,QAASqB,EACTX,GAAIc,eAGRX,EAAIY,QAAQF,GACZ,EAAKG,SAAS,CAAEC,UAAWd,IACvBe,EAAKjC,KAAKC,UAAU,EAAKiC,MAAMF,WACnCvB,aAAa0B,QAAQ,UAAWF,GAzB/B,wBA4BDG,MAAM,gBA5BL,0DA+BKC,QAAQC,IAAR,MA/BL,0DAvEM,EA0GnBK,cA1GmB,uCA0GH,WAAOtB,GAAP,mBAAAC,EAAA,sEAEFkB,EAAS,CACXxB,OAAQ,SACRb,QAAS,CACL,eAAgB,qBALhB,SAQeoB,MAAM,EAAKzB,MAAMmB,IAAKuB,GARrC,cAQFhB,EARE,gBASWA,EAASC,OATpB,OASFC,EATE,OAUR,EAAK5B,MAAM6B,eAAeD,GAVlB,kDAYRW,QAAQC,IAAR,MAZQ,0DA1GG,wDAyHnBM,aAzHmB,uCAyHJ,WAAOvB,GAAP,SAAAC,EAAA,+DAEPD,EAAEwB,iBACFxB,EAAEyB,OAAOC,QAHF,KAIC,EAAKjD,MAAMkB,OAJZ,OAKE,SALF,OAQE,QARF,OAWE,WAXF,wCAMO,EAAKuB,YAAYlB,GANxB,2DASO,EAAKqB,WAAWrB,GATvB,6DAYO,EAAKsB,cAActB,GAZ1B,6DAeO,EAAKD,WAAWC,GAfvB,0DAkBPgB,QAAQC,IAAR,MAlBO,0DAzHI,wDA+InBU,WAAa,SAAC3B,GACV,IAAIoB,EAAOpB,EAAEyB,OAAOG,MACpB,EAAKlB,SAAS,CAAEU,UA/IhB,EAAKP,MAAQ,CACTF,UAAWnC,GAAkB,GAC7B4C,KAAM,IAJK,E,qDAwJf,OACI,kBAAC,IAAMS,SAAP,KACI,0BAAMC,SAAUC,KAAKR,cACjB,+BACI,uCACA,2BAAOS,KAAK,MAAMtC,GAAG,OAAOuC,KAAK,OAAOC,SAAUH,KAAKtD,MAAM0D,kBAC7D,wCAEJ,+BACI,0BAAMzC,GAAG,MAAMhB,UAAiC,QAAtBqD,KAAKtD,MAAMkB,OAAmB,SAAW,GAAIyC,QAASL,KAAKtD,MAAM4D,oBAA3F,OACA,0BAAM3C,GAAG,OAAOhB,UAAiC,SAAtBqD,KAAKtD,MAAMkB,OAAoB,SAAW,GAAIyC,QAASL,KAAKtD,MAAM4D,oBAA7F,QACA,0BAAM3C,GAAG,MAAMhB,UAAiC,QAAtBqD,KAAKtD,MAAMkB,OAAmB,SAAW,GAAIyC,QAASL,KAAKtD,MAAM4D,oBAA3F,OACA,0BAAM3C,GAAG,SAAShB,UAAiC,WAAtBqD,KAAKtD,MAAMkB,OAAsB,SAAW,GAAIyC,QAASL,KAAKtD,MAAM4D,oBAAjG,WAEJ,2CACA,8BAAUH,SAAUH,KAAKJ,cAE7B,6BAASjD,UAAU,WACf,4BACIqD,KAAKlB,MAAMF,UAAUpB,KAAI,SAAAC,GACrB,OAAQ,wBAAIC,IAAKD,EAAIE,IACjB,0BAAMhB,UAAU,UAAUc,EAAIG,QAC9B,0BAAMjB,UAAU,OAAOc,EAAII,gB,GA/KxCxB,IAAMC,WEsDViE,E,kDA1DX,WAAY7D,GAAQ,IAAD,8BACf,cAAMA,IASV8D,mBAAqB,SAACvD,GAKlB,EAAK0B,SAAS,CAAE1B,UAASF,QAHX,CACV0D,OAAQ,uBAbG,EAiBnBL,gBAAkB,SAACnC,GACf,IAAIJ,EAAMI,EAAEyB,OAAOG,MACnB,EAAKlB,SAAS,CAAEd,SAnBD,EAqBnByC,mBAAqB,SAACrC,GAClB,IAAIL,EAASK,EAAEyB,OAAO/B,GACtB,EAAKgB,SAAS,CAAEf,YArBhB,EAAKkB,MAAQ,CACTlB,OAAQ,MACRC,IAAK,GACL6C,OAAQ,EACRzD,QAAS,GACTF,QAAS,IAPE,E,qDA0Bf,OACI,kBAAC,IAAM+C,SAAP,KACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,KACd,8BACI,kBAAC,EAAD,CACIrC,eAAgByB,KAAKQ,mBACrBJ,gBAAiBJ,KAAKI,gBACtBE,mBAAoBN,KAAKM,mBACzBzC,IAAKmC,KAAKlB,MAAMjB,IAChBD,OAAQoC,KAAKlB,MAAMlB,SAEvB,kBAAC,EAAD,CAASb,QAASiD,KAAKlB,MAAM/B,QAASE,QAAS+C,KAAKlB,MAAM7B,YAKlE,kBAAC,IAAD,CAAO0D,OAAK,EAACC,KAAK,YACd,8BACI,kBAAC,EAAD,QAIR,kBAAC,EAAD,Y,GAnDFvE,IAAMC,WCRlBuE,E,uKAEE,OAAO,kBAAC,EAAD,U,GAFIxE,IAAMC,WAMnBwE,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,kBAAC,EAAD,MAAUJ,K","file":"static/js/main.41a35969.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <header>\n                <h1>RESTy</h1>\n                    <nav>\n                        <ul>\n                            <li>\n                                <Link to=\"/\">Home</Link>\n                            </li>\n                            <li>\n                                <NavLink to=\"/history\">History</NavLink>\n                            </li>\n                        </ul>\n                    </nav>\n\n            </header>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\n\n\nclass Footer extends React.Component{\n    render(){\n        return <footer>&copy; 2020 Yousef Al-Shun</footer>\n    }\n}\nexport default Footer;","import React from 'react';\n\n\nfunction Results(props) {\n    // console.log('results in results', props.results)\n    return (\n        <>\n            <h3>Results</h3>\n            <div className='apiResults'>\n            \n            <pre>{JSON.stringify({Headers:props.headers, Response:props.results}, null, '\\t')}</pre>\n\n\n            </div>\n        </>\n    )\n}\n\nexport default Results;","import React from 'react';\nimport './form.scss';\nimport { v4 as uuidv4 } from 'uuid';\n\n// function getItem() {\nlet locals;\nlet getting = localStorage.getItem('history');\nif (getting) {\n    // console.log('get item', getting);\n    locals = JSON.parse(getting);\n}\n// }\n// getItem();\n\nlet arr = locals ? locals : [];\n\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            theBigObj: locals ? locals : [],\n            body: '',\n        }\n    }\n\n    //get\n    getHandler = async (e) => {\n        try {\n            if (this.props.url && this.props.method) {\n                const fetching = await fetch(this.props.url);\n                const data = await fetching.json();\n\n                this.props.resultsHandler(data);\n                let inLocal = {\n                    method: this.props.method,\n                    url: this.props.url,\n                    results: data,\n                    id: uuidv4(),\n                };\n\n                arr.unshift(inLocal);\n                this.setState({ theBigObj: arr });\n                let hi = JSON.stringify(this.state.theBigObj)\n                localStorage.setItem('history', hi);\n\n            } else {\n                alert('missing info');\n            }\n\n        } catch (e) { console.log(e) }\n    }\n    //post and put\n    postHandler = async () => {\n        try {\n            if (this.props.url && this.props.method) {\n                let option = {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: this.state.body,\n                }\n                const fetching = await fetch(this.props.url, option);\n                const data = await fetching.json();\n\n                this.props.resultsHandler(data);\n\n                let inLocal = {\n                    method: this.props.method,\n                    url: this.props.url,\n                    results: data,\n                    id: uuidv4(),\n                };\n                \n                arr.unshift(inLocal);\n                this.setState({ theBigObj: arr });\n                let hi = JSON.stringify(this.state.theBigObj)\n                localStorage.setItem('history', hi);\n                \n            } else {\n                alert('missing info');\n            }\n\n        } catch (e) { console.log(e) }\n\n    }\n\n    //put\n    putHandler = async () => {\n        try {\n            if (this.props.url && this.props.method) {\n                let option = {\n                    method: 'PUT',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: this.state.body,\n                }\n                const fetching = await fetch(this.props.url, option);\n                const data = await fetching.json();\n\n                this.props.resultsHandler(data);\n\n                let inLocal = {\n                    method: this.props.method,\n                    url: this.props.url,\n                    results: data,\n                    id: uuidv4(),\n                };\n                \n                arr.unshift(inLocal);\n                this.setState({ theBigObj: arr });\n                let hi = JSON.stringify(this.state.theBigObj)\n                localStorage.setItem('history', hi);\n                \n            } else {\n                alert('missing info');\n            }\n\n        } catch (e) { console.log(e) }\n\n    }\n    //delete\n    deleteHandler = async (e) => {\n        try {\n            const option = {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            const fetching = await fetch(this.props.url, option);\n            const data = await fetching.json();\n            this.props.resultsHandler(data);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n    handleSubmit = async (e) => {\n        try {\n            e.preventDefault();\n            e.target.reset();\n            switch (this.props.method) {\n                case 'post':\n                    await this.postHandler(e);\n                    break;\n                case 'put':\n                    await this.putHandler(e);\n                    break;\n                case 'delete':\n                    await this.deleteHandler(e);\n                    break;\n                default:\n                    await this.getHandler(e);\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    bodyChange = (e) => {\n        let body = e.target.value;\n        this.setState({ body });\n    }\n\n\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        <span>URL: </span>\n                        <input name='url' id='urll' type='text' onChange={this.props.handleChangeUrl} />\n                        <button>GO!</button>\n                    </label>\n                    <label>\n                        <span id=\"get\" className={this.props.method === 'get' ? 'active' : ''} onClick={this.props.handleChangeMethod}>GET</span>\n                        <span id=\"post\" className={this.props.method === 'post' ? 'active' : ''} onClick={this.props.handleChangeMethod}>POST</span>\n                        <span id=\"put\" className={this.props.method === 'put' ? 'active' : ''} onClick={this.props.handleChangeMethod}>PUT</span>\n                        <span id=\"delete\" className={this.props.method === 'delete' ? 'active' : ''} onClick={this.props.handleChangeMethod}>DELETE</span>\n                    </label>\n                    <label>the Body</label>\n                    <textarea onChange={this.bodyChange}></textarea>\n                </form>\n                <section className=\"results\">\n                    <ul>{\n                        this.state.theBigObj.map(val => {\n                            return (<li key={val.id}>\n                                <span className=\"method\">{val.method}</span>\n                                <span className=\"url\">{val.url}</span>\n                            </li>)\n                        })}\n                    </ul>\n                </section>\n            </React.Fragment>\n        )\n    }\n}\nexport default Form;\n","import React from 'react';\n\nexport default History = (props) => {\n    let theQueries = [];\n    let getting = localStorage.getItem('history');\n    if (getting) {\n        // console.log('get item', getting);\n        theQueries = JSON.parse(getting);\n\n    }\n    return (\n        <>\n            <section className=\"results\">\n                <ul>{\n                    theQueries.map(val => {\n                        return (<li key={val.id}>\n                            <span className=\"method\">{val.method}</span>\n                            <span className=\"url\">{val.url}</span>\n                        </li>)\n                    })}\n                </ul>\n            </section>\n        </>\n    )\n\n}","import React from 'react';\nimport './app.scss';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Header from './components/header/';\nimport Footer from './components/footer/';\nimport Results from './components/results/';\nimport History from './components/history/';\nimport Form from './components/form/form.js';\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            method: 'get',\n            url: '',\n            counts: 0,\n            results: {},\n            headers: {},\n        };\n    }\n    handlingTheResults = (results) => {\n        // console.log(results)\n        let headers = {\n            Accept: 'application/json'\n        }\n        this.setState({ results, headers });\n    }\n    handleChangeUrl = (e) => {\n        let url = e.target.value;\n        this.setState({ url });\n    }\n    handleChangeMethod = (e) => {\n        let method = e.target.id;\n        this.setState({ method });\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Router>\n                    <Header />\n                    <Route exact path='/'>\n                        <main>\n                            <Form\n                                resultsHandler={this.handlingTheResults}\n                                handleChangeUrl={this.handleChangeUrl}\n                                handleChangeMethod={this.handleChangeMethod}\n                                url={this.state.url}\n                                method={this.state.method}\n                            />\n                            <Results headers={this.state.headers} results={this.state.results} />\n\n                        </main>\n                    </Route>\n\n                    <Route exact path='/history'>\n                        <main>\n                            <History />\n                        </main>\n                    </Route>\n\n                    <Footer />\n                </Router>\n            </React.Fragment >\n\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\n\nclass Main extends React.Component{\n    render(){\n        return <App />;\n    }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}